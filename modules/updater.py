import os
import requests
import shutil

def download_file(url, dest_path):
    try:
        r = requests.get(url, stream=True, timeout=15)
        r.raise_for_status()
        with open(dest_path, 'wb') as f:
            for chunk in r.iter_content(chunk_size=8192):
                if chunk:
                    f.write(chunk)
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {url}: {e}")
        return False


def backup_and_replace(file_path):
    if os.path.exists(file_path):
        backup_path = file_path + ".bak"
        try:
            shutil.copyfile(file_path, backup_path)
            print(f"üì¶ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: {backup_path}")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –¥–ª—è {file_path}: {e}")


def perform_update(file_list):
    for name, url in file_list:
        target_path = os.path.join(os.getcwd(), name)
        print(f"‚¨áÔ∏è –ó–∞–≥—Ä—É–∂–∞–µ–º {name}...")
        success = download_file(url, target_path + ".tmp")

        if success:
            backup_and_replace(target_path)
            try:
                os.replace(target_path + ".tmp", target_path)
                print(f"‚úÖ –û–±–Ω–æ–≤–ª—ë–Ω: {name}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–º–µ–Ω—ã {name}: {e}")
        else:
            print(f"‚è≠ –ü—Ä–æ–ø—É—Å–∫–∞–µ–º {name}, –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å")


def restart_application():
    print("üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    python = os.path.join(os.getcwd(), "python", "python.exe")  # –ø—É—Ç—å –∫ –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω–æ–º—É Python
    main_script = os.path.join(os.getcwd(), "main.py")
    os.execv(python, [python, main_script])